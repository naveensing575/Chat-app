{"version":3,"sources":["misc/helpers.js","misc/firebase.js","pages/SignIn.js","context/profile.context.js","components/PrivateRoute.js","misc/custom-hooks.js","components/EditableInput.js","components/dashboard/ProviderBlock.js","components/ProfileAvatar.js","components/dashboard/AvatarUploadBtn.js","components/dashboard/index.js","components/dashboard/DashboardToggle.js","components/CreateRoomBtnModal.js","components/rooms/RoomItem.js","context/rooms.context.js","components/rooms/ChatRoomList.js","components/Sidebar.js","context/current-room.context.js","components/chat-window/top/RoomInfoBtnModal.js","components/chat-window/top/EditRoomBtnDrawer.js","components/chat-window/top/SendFcmBtnModal.js","components/chat-window/top/AskFcmBtnModal.js","components/chat-window/top/index.js","components/chat-window/bottom/AttachmentBtnModal.js","components/chat-window/bottom/AudioMsgBtn.js","components/chat-window/bottom/index.js","components/chat-window/messages/ProfileInfoBtnModal.js","components/PresenceDot.js","components/chat-window/messages/IconBtnControl.js","components/chat-window/messages/ImgBtnModal.js","components/chat-window/messages/MessageItem.js","components/chat-window/messages/index.js","pages/Home/Chat.js","pages/Home/index.js","components/PublicRoute.js","App.js","index.js"],"names":["getNameInitials","name","splitName","toUpperCase","split","length","transformToArr","snapVal","Object","keys","transformToArrWithId","map","roomId","id","getUserUpdates","userId","keyToUpdate","value","db","a","updates","getMsgs","ref","orderByChild","equalTo","once","getRooms","Promise","all","mSnap","rSnap","forEach","msgSnap","key","roomSnap","isLocalhost","Boolean","window","location","hostname","match","app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","database","storage","functions","messaging","isSupported","usePublicVapidKey","onMessage","notification","title","body","Toast","info","description","duration","useFunctionsEmulator","SignIn","signInWithProvider","provider","signInWithPopup","additionalUserInfo","user","isNewUser","uid","set","displayName","createdAt","ServerValue","TIMESTAMP","Alert","success","error","message","Container","Grid","className","Row","Col","xs","md","mdOffset","Panel","Button","block","color","onClick","GoogleAuthProvider","Icon","icon","GithubAuthProvider","isOfflineForDatabase","state","last_changed","isOnlineForDatabase","ProfileContext","createContext","ProfileProvider","children","useState","profile","setProfile","isLoading","setIsLoading","useEffect","userRef","userStatusRef","tokenRefreshUnsub","authUnsub","onAuthStateChanged","authObj","on","snap","val","data","avatar","email","snapshot","onDisconnect","then","getToken","currentToken","console","log","onTokenRefresh","off","Provider","useProfile","useContext","PrivateRoute","routeProps","Loader","center","vertical","size","content","speed","to","useModalState","defaultValue","isOpen","setIsOpen","open","useCallback","close","useMediaQuery","query","matchMedia","matches","setMatches","queryList","listener","evt","addListener","removeListener","EditableInput","initialValue","onSave","label","placeholder","emptyMsg","wrapperClassName","inputProps","input","setInput","isEditable","setIsEditable","onInputChange","onEditClick","p","onSaveClick","trimmed","trim","InputGroup","Input","disabled","onChange","ProviderBlock","currentUser","providerData","some","providerId","isConnected","setIsConnected","updateIsConnected","unlink","Error","link","linkWithPopup","Tag","closable","onClose","FacebookAuthProvider","ProfileAvatar","avatarProps","Avatar","circle","acceptedFileTypes","getBlob","canvas","resolve","reject","toBlob","blob","AvatarUploadBtn","img","setImg","avatarEditorRef","useRef","onUploadClick","current","getImageScaledToCanvas","avatarFileRef","child","put","cacheControl","uploadAvatarResult","getDownloadURL","downloadUrl","update","src","htmlFor","type","accept","ev","currFiles","target","files","file","includes","isValidFile","warning","Modal","show","onHide","Header","Title","Body","image","width","height","border","borderRadius","rotate","Footer","appearance","Dashboard","onSignOut","newData","Drawer","Divider","DashboardToggle","isMobile","signOut","catch","err","full","placement","StringType","Schema","Types","model","Model","isRequired","INITIAL_FORM","CreateRoomBtnModal","formValue","setFormValue","formRef","onFormChange","onSubmit","check","newRoomdata","admins","fcmUsers","push","Form","fluid","FormGroup","ControlLabel","FormControl","componentClass","rows","RoomItem","room","lastMessage","datetime","Date","author","text","RoomsContext","RoomsProvider","rooms","setRooms","roomListRef","useRooms","ChatRoomList","aboveElHeight","useLocation","Nav","reversed","style","activeKey","pathname","Item","Link","eventKey","Sidebar","topSidebarRef","setHeight","scrollHeight","CurrentRoomContext","CurrentRoomProvider","useCurrentRoom","selector","useContextSelector","RoomInfoBtnModal","v","memo","EditRoomBtnDrawer","chatId","useParams","updateData","newName","newDesc","SendFcmBtnModal","sendFcm","httpsCallable","AskFcmBtnModal","isReceivingFcm","IconButton","backdrop","Notification","permission","remove","Top","isAdmin","ButtonToolbar","AttachmentBtnModal","afterUpload","fileList","setFileList","onUpload","uploadPromises","f","now","blobFile","uploadSnapshots","shapePromises","metadata","contentType","url","Uploader","autoUpload","action","fileArr","filtered","filter","el","slice","multiple","listType","AudioMsgBtn","isRecording","setIsRecording","isUploading","setIsUploading","record","onStop","mimeType","assembleMessage","likeCount","Bottom","onSendClick","msgData","messageId","msgId","lastMsgId","pop","onKeyDown","keyCode","preventDefault","ProfileInfoBtnModal","btnProps","shortName","memberSince","toLocaleDateString","getColor","presence","getText","PresenceDot","setPresence","exists","usePresence","Whisper","trigger","speaker","Tooltip","Badge","backgroundColor","ConditionalBadge","condition","IconBtnControl","isVisible","iconName","tooltip","badgeContent","props","visibility","delay","delayHide","delayShow","ImgBtnModal","fileName","alt","href","rel","renderFileMessage","controls","MessageItem","handleAdmin","handleLike","handleDelete","likes","setValue","handleMouseOver","handleMouseOut","node","addEventListener","removeEventListener","useHover","selfRef","isHovered","isMsgAuthorAdmin","isAuthor","canGrantAdmin","canShowIcons","isLiked","messagesRef","Messages","messages","setMessages","limit","setLimit","isChatEmpty","canShowMessages","loadMessages","limitToLast","threshold","scrollTop","clientHeight","shouldScrollToBottom","onLoadMore","oldHeight","setTimeout","newHeight","adminsRef","transaction","alertMsg","messageRef","msg","confirm","isLast","fileRef","refFromURL","delete","groupingKeyFn","groups","item","toDateString","reduce","result","groupingKey","items","date","msgs","renderMessages","Chat","currentRoom","find","currentRoomData","Home","isDesktop","isExact","useRouteMatch","canRenderSidebar","exact","path","PublicRoute","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9fbf8a17.chunk.js","sourcesContent":["export function getNameInitials(name) {\n  const splitName = name.toUpperCase().split(' ');\n\n  if (splitName.length > 1) {\n    return splitName[0][0] + splitName[1][0];\n  }\n\n  return splitName[0][0];\n}\n\nexport function transformToArr(snapVal) {\n  return snapVal ? Object.keys(snapVal) : [];\n}\n\nexport function transformToArrWithId(snapVal) {\n  return snapVal\n    ? Object.keys(snapVal).map(roomId => {\n        return { ...snapVal[roomId], id: roomId };\n      })\n    : [];\n}\n\nexport async function getUserUpdates(userId, keyToUpdate, value, db) {\n  const updates = {};\n\n  updates[`/profiles/${userId}/${keyToUpdate}`] = value;\n\n  const getMsgs = db\n    .ref('/messages')\n    .orderByChild('author/uid')\n    .equalTo(userId)\n    .once('value');\n\n  const getRooms = db\n    .ref('/rooms')\n    .orderByChild('lastMessage/author/uid')\n    .equalTo(userId)\n    .once('value');\n\n  const [mSnap, rSnap] = await Promise.all([getMsgs, getRooms]);\n\n  mSnap.forEach(msgSnap => {\n    updates[`/messages/${msgSnap.key}/author/${keyToUpdate}`] = value;\n  });\n\n  rSnap.forEach(roomSnap => {\n    updates[`/rooms/${roomSnap.key}/lastMessage/author/${keyToUpdate}`] = value;\n  });\n\n  return updates;\n}\n\nexport function groupBy(array, groupingKeyFn) {\n  return array.reduce((result, item) => {\n    const groupingKey = groupingKeyFn(item);\n\n    if (!result[groupingKey]) {\n      result[groupingKey] = [];\n    }\n\n    result[groupingKey].push(item);\n\n    return result;\n  }, {});\n}\n\nexport const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n","import { Notification as Toast } from 'rsuite';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/storage';\nimport 'firebase/messaging';\nimport 'firebase/functions';\nimport { isLocalhost } from './helpers';\n\nconst config = {\n  apiKey: \"AIzaSyB2AOFTboHdL3YUlhmFZhUwa7M163IIYDg\",\n  authDomain: \"chat-web-app-d8a09.firebaseapp.com\",\n  databaseURL: \"https://chat-web-app-d8a09-default-rtdb.firebaseio.com\",\n  projectId: \"chat-web-app-d8a09\",\n  storageBucket: \"chat-web-app-d8a09.appspot.com\",\n  messagingSenderId: \"866470994862\",\n  appId: \"1:866470994862:web:0bbb58ab8ecc68c8bb9e3f\"\n};\n\nconst app = firebase.initializeApp(config);\nexport const auth = app.auth();\nexport const database = app.database();\nexport const storage = app.storage();\nexport const functions = app.functions('europe-west3');\n\nexport const messaging = firebase.messaging.isSupported()\n  ? app.messaging()\n  : null;\n\nif (messaging) {\n  messaging.usePublicVapidKey(\n    'BOoXxIPIiM2dtL3xvw2dhovLhPMTQZ6EDH7xeNWYKNKRHJNuUPeyRH_TsXbpKLkODbXAwX2cSkiivpOUbRiUSyM'\n  );\n\n  messaging.onMessage(({ notification }) => {\n    const { title, body } = notification;\n    Toast.info({ title, description: body, duration: 0 });\n  });\n}\n\nif (isLocalhost) {\n  functions.useFunctionsEmulator('http://localhost:5001');\n}\n","import React from 'react';\nimport firebase from 'firebase/app';\nimport { Container, Grid, Row, Panel, Col, Button, Icon, Alert } from 'rsuite';\nimport { auth, database } from '../misc/firebase';\n\nconst SignIn = () => {\n  const signInWithProvider = async provider => {\n    try {\n      const { additionalUserInfo, user } = await auth.signInWithPopup(provider);\n\n      if (additionalUserInfo.isNewUser) {\n        await database.ref(`/profiles/${user.uid}`).set({\n          name: user.displayName,\n          createdAt: firebase.database.ServerValue.TIMESTAMP,\n        });\n      }\n\n      Alert.success('Signed in', 4000);\n    } catch (err) {\n      Alert.error(err.message, 4000);\n    }\n  };\n\n  const onGithubSignIn = () => {\n    signInWithProvider(new firebase.auth.GithubAuthProvider());\n  };\n\n  const onGoogleSignIn = () => {\n    signInWithProvider(new firebase.auth.GoogleAuthProvider());\n  };\n\n  return (\n    <Container>\n      <Grid className=\"mt-page\">\n        <Row>\n          <Col xs={24} md={12} mdOffset={6}>\n            <Panel>\n              <div className=\"text-center\">\n                <h2>Welcome to Chat</h2><br/>\n                <p>Progressive chat platform by @Naveen</p><br/>\n              </div>\n              <div className=\"mt-3\">\n                <Button block color=\"green\" onClick={onGoogleSignIn}>\n                  <Icon icon=\"google\" /> Continue with Google\n                </Button>\n                <br/>\n                <Button block color=\"blue\" onClick={onGithubSignIn}>\n                  <Icon icon=\"github\" /> Continue with Github\n                </Button>\n              </div>\n            </Panel>\n          </Col>\n        </Row>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default SignIn;","import React, { createContext, useState, useContext, useEffect } from 'react';\nimport firebase from 'firebase/app';\nimport { auth, database, messaging } from '../misc/firebase';\n\nexport const isOfflineForDatabase = {\n  state: 'offline',\n  last_changed: firebase.database.ServerValue.TIMESTAMP,\n};\n\nconst isOnlineForDatabase = {\n  state: 'online',\n  last_changed: firebase.database.ServerValue.TIMESTAMP,\n};\n\nconst ProfileContext = createContext();\n\nexport const ProfileProvider = ({ children }) => {\n  const [profile, setProfile] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    let userRef;\n    let userStatusRef;\n    let tokenRefreshUnsub;\n\n    const authUnsub = auth.onAuthStateChanged(async authObj => {\n      if (authObj) {\n        userStatusRef = database.ref(`/status/${authObj.uid}`);\n        userRef = database.ref(`/profiles/${authObj.uid}`);\n\n        userRef.on('value', snap => {\n          const { name, createdAt, avatar } = snap.val();\n\n          const data = {\n            name,\n            createdAt,\n            avatar,\n            uid: authObj.uid,\n            email: authObj.email,\n          };\n\n          setProfile(data);\n          setIsLoading(false);\n        });\n\n        database.ref('.info/connected').on('value', snapshot => {\n          if (!!snapshot.val() === false) {\n            return;\n          }\n\n          userStatusRef\n            .onDisconnect()\n            .set(isOfflineForDatabase)\n            .then(() => {\n              userStatusRef.set(isOnlineForDatabase);\n            });\n        });\n\n        if (messaging) {\n          try {\n            const currentToken = await messaging.getToken();\n            if (currentToken) {\n              await database\n                .ref(`/fcm_tokens/${currentToken}`)\n                .set(authObj.uid);\n            }\n          } catch (err) {\n            console.log('An error occurred while retrieving token. ', err);\n          }\n\n          tokenRefreshUnsub = messaging.onTokenRefresh(async () => {\n            try {\n              const currentToken = await messaging.getToken();\n              if (currentToken) {\n                await database\n                  .ref(`/fcm_tokens/${currentToken}`)\n                  .set(authObj.uid);\n              }\n            } catch (err) {\n              console.log('An error occurred while retrieving token. ', err);\n            }\n          });\n        }\n      } else {\n        if (userRef) {\n          userRef.off();\n        }\n\n        if (userStatusRef) {\n          userStatusRef.off();\n        }\n\n        if (tokenRefreshUnsub) {\n          tokenRefreshUnsub();\n        }\n\n        database.ref('.info/connected').off();\n\n        setProfile(null);\n        setIsLoading(false);\n      }\n    });\n\n    return () => {\n      authUnsub();\n\n      database.ref('.info/connected').off();\n\n      if (userRef) {\n        userRef.off();\n      }\n\n      if (tokenRefreshUnsub) {\n        tokenRefreshUnsub();\n      }\n\n      if (userStatusRef) {\n        userStatusRef.off();\n      }\n    };\n  }, []);\n\n  return (\n    <ProfileContext.Provider value={{ isLoading, profile }}>\n      {children}\n    </ProfileContext.Provider>\n  );\n};\n\nexport const useProfile = () => useContext(ProfileContext);\n","import React from 'react';\nimport { Redirect, Route } from 'react-router';\nimport { Container, Loader } from 'rsuite';\nimport { useProfile } from '../context/profile.context';\n\nconst PrivateRoute = ({ children, ...routeProps }) => {\n  const { profile, isLoading } = useProfile();\n\n  if (isLoading && !profile) {\n    return (\n      <Container>\n        <Loader center vertical size=\"md\" content=\"Loading\" speed=\"slow\" />\n      </Container>\n    );\n  }\n\n  if (!profile && !isLoading) {\n    return <Redirect to=\"/signin\" />;\n  }\n\n  return <Route {...routeProps}>{children}</Route>;\n};\n\nexport default PrivateRoute;\n","import { useState, useCallback, useEffect, useRef } from 'react';\nimport { database } from './firebase';\n\nexport function useModalState(defaultValue = false) {\n  const [isOpen, setIsOpen] = useState(defaultValue);\n\n  const open = useCallback(() => setIsOpen(true), []);\n  const close = useCallback(() => setIsOpen(false), []);\n\n  return { isOpen, open, close };\n}\n\nexport const useMediaQuery = query => {\n  const [matches, setMatches] = useState(\n    () => window.matchMedia(query).matches\n  );\n\n  useEffect(() => {\n    const queryList = window.matchMedia(query);\n    setMatches(queryList.matches);\n\n    const listener = evt => setMatches(evt.matches);\n\n    queryList.addListener(listener);\n    return () => queryList.removeListener(listener);\n  }, [query]);\n\n  return matches;\n};\n\nexport function usePresence(uid) {\n  const [presence, setPresence] = useState(null);\n\n  useEffect(() => {\n    const userStatusRef = database.ref(`/status/${uid}`);\n\n    userStatusRef.on('value', snap => {\n      if (snap.exists()) {\n        const data = snap.val();\n\n        setPresence(data);\n      }\n    });\n\n    return () => {\n      userStatusRef.off();\n    };\n  }, [uid]);\n\n  return presence;\n}\n\nexport function useHover() {\n  const [value, setValue] = useState(false);\n\n  const ref = useRef(null);\n\n  const handleMouseOver = () => setValue(true);\n  const handleMouseOut = () => setValue(false);\n\n  useEffect(\n    () => {\n      const node = ref.current;\n      if (node) {\n        node.addEventListener('mouseover', handleMouseOver);\n        node.addEventListener('mouseout', handleMouseOut);\n      }\n      return () => {\n        node.removeEventListener('mouseover', handleMouseOver);\n        node.removeEventListener('mouseout', handleMouseOut);\n      };\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [ref.current] // Recall only if ref changes\n  );\n\n  return [ref, value];\n}\n","import React, { useState, useCallback } from 'react';\nimport { Input, InputGroup, Icon, Alert } from 'rsuite';\n\nconst EditableInput = ({\n  initialValue,\n  onSave,\n  label = null,\n  placeholder = 'Write your value',\n  emptyMsg = 'Input is empty',\n  wrapperClassName = '',\n  ...inputProps\n}) => {\n  const [input, setInput] = useState(initialValue);\n  const [isEditable, setIsEditable] = useState(false);\n\n  const onInputChange = useCallback(value => {\n    setInput(value);\n  }, []);\n\n  const onEditClick = useCallback(() => {\n    setIsEditable(p => !p);\n    setInput(initialValue);\n  }, [initialValue]);\n\n  const onSaveClick = async () => {\n    const trimmed = input.trim();\n\n    if (trimmed === '') {\n      Alert.info(emptyMsg, 4000);\n    }\n\n    if (trimmed !== initialValue) {\n      await onSave(trimmed);\n    }\n\n    setIsEditable(false);\n  };\n\n  return (\n    <div className={wrapperClassName}>\n      {label}\n      <InputGroup>\n        <Input\n          {...inputProps}\n          disabled={!isEditable}\n          placeholder={placeholder}\n          value={input}\n          onChange={onInputChange}\n        />\n        <InputGroup.Button onClick={onEditClick}>\n          <Icon icon={isEditable ? 'close' : 'edit2'} />\n        </InputGroup.Button>\n        {isEditable && (\n          <InputGroup.Button onClick={onSaveClick}>\n            <Icon icon=\"check\" />\n          </InputGroup.Button>\n        )}\n      </InputGroup>\n    </div>\n  );\n};\n\nexport default EditableInput;\n","import React, { useState } from 'react';\nimport { Tag, Icon, Button, Alert } from 'rsuite';\nimport firebase from 'firebase/app';\nimport { auth } from '../../misc/firebase';\n\nconst ProviderBlock = () => {\n  const [isConnected, setIsConnected] = useState({\n    'google.com': auth.currentUser.providerData.some(\n      data => data.providerId === 'google.com'\n    ),\n    'facebook.com': auth.currentUser.providerData.some(\n      data => data.providerId === 'facebook.com'\n    ),\n  });\n\n  const updateIsConnected = (providerId, value) => {\n    setIsConnected(p => {\n      return {\n        ...p,\n        [providerId]: value,\n      };\n    });\n  };\n\n  const unlink = async providerId => {\n    try {\n      if (auth.currentUser.providerData.length === 1) {\n        throw new Error(`You can not disconnect from ${providerId}`);\n      }\n\n      await auth.currentUser.unlink(providerId);\n      updateIsConnected(providerId, false);\n      Alert.info(`Disconnected from ${providerId}`, 4000);\n    } catch (err) {\n      Alert.error(err.message, 4000);\n    }\n  };\n\n  const unlinkFacebook = () => {\n    unlink('facebook.com');\n  };\n  const unlinkGoogle = () => {\n    unlink('google.com');\n  };\n\n  const link = async provider => {\n    try {\n      await auth.currentUser.linkWithPopup(provider);\n      Alert.info(`Linked to ${provider.providerId}`, 4000);\n      updateIsConnected(provider.providerId, true);\n    } catch (err) {\n      Alert.error(err.message, 400);\n    }\n  };\n\n  const linkFacebook = () => {\n    link(new firebase.auth.FacebookAuthProvider());\n  };\n  const linkGoogle = () => {\n    link(new firebase.auth.GoogleAuthProvider());\n  };\n\n  return (\n    <div>\n      {isConnected['google.com'] && (\n        <Tag color=\"green\" closable onClose={unlinkGoogle}>\n          <Icon icon=\"google\" /> Connected\n        </Tag>\n      )}\n      {isConnected['facebook.com'] && (\n        <Tag color=\"blue\" closable onClose={unlinkFacebook}>\n          <Icon icon=\"facebook\" /> Connected\n        </Tag>\n      )}\n\n      <div className=\"mt-2\">\n        {!isConnected['google.com'] && (\n          <Button block color=\"green\" onClick={linkGoogle}>\n            <Icon icon=\"google\" /> Link to Google\n          </Button>\n        )}\n\n        {!isConnected['facebook.com'] && (\n          <Button block color=\"blue\" onClick={linkFacebook}>\n            <Icon icon=\"facebook\" /> Link to Facebook\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ProviderBlock;\n","import React from 'react';\nimport { Avatar } from 'rsuite';\nimport { getNameInitials } from '../misc/helpers';\n\nconst ProfileAvatar = ({ name, ...avatarProps }) => {\n  return (\n    <Avatar circle {...avatarProps}>\n      {getNameInitials(name)}\n    </Avatar>\n  );\n};\n\nexport default ProfileAvatar;\n","import React, { useState, useRef } from 'react';\nimport { Modal, Button, Alert } from 'rsuite';\nimport AvatarEditor from 'react-avatar-editor';\nimport { useModalState } from '../../misc/custom-hooks';\nimport { storage, database } from '../../misc/firebase';\nimport { useProfile } from '../../context/profile.context';\nimport ProfileAvatar from '../ProfileAvatar';\nimport { getUserUpdates } from '../../misc/helpers';\n\nconst fileInputTypes = '.png, .jpeg, .jpg';\n\nconst acceptedFileTypes = ['image/png', 'image/jpeg', 'image/pjpeg'];\nconst isValidFile = file => acceptedFileTypes.includes(file.type);\n\nconst getBlob = canvas => {\n  return new Promise((resolve, reject) => {\n    canvas.toBlob(blob => {\n      if (blob) {\n        resolve(blob);\n      } else {\n        reject(new Error('File process error'));\n      }\n    });\n  });\n};\n\nconst AvatarUploadBtn = () => {\n  const { isOpen, open, close } = useModalState();\n\n  const { profile } = useProfile();\n  const [img, setImg] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const avatarEditorRef = useRef();\n\n  const onFileInputChange = ev => {\n    const currFiles = ev.target.files;\n\n    if (currFiles.length === 1) {\n      const file = currFiles[0];\n\n      if (isValidFile(file)) {\n        setImg(file);\n\n        open();\n      } else {\n        Alert.warning(`Wrong file type ${file.type}`, 4000);\n      }\n    }\n  };\n\n  const onUploadClick = async () => {\n    const canvas = avatarEditorRef.current.getImageScaledToCanvas();\n\n    setIsLoading(true);\n    try {\n      const blob = await getBlob(canvas);\n\n      const avatarFileRef = storage\n        .ref(`/profile/${profile.uid}`)\n        .child('avatar');\n\n      const uploadAvatarResult = await avatarFileRef.put(blob, {\n        cacheControl: `public, max-age=${3600 * 24 * 3}`,\n      });\n\n      const downloadUrl = await uploadAvatarResult.ref.getDownloadURL();\n\n      const updates = await getUserUpdates(\n        profile.uid,\n        'avatar',\n        downloadUrl,\n        database\n      );\n\n      await database.ref().update(updates);\n\n      setIsLoading(false);\n      Alert.info('Avatar has been uploaded', 4000);\n    } catch (err) {\n      setIsLoading(false);\n      Alert.error(err.message, 4000);\n    }\n  };\n\n  return (\n    <div className=\"mt-3 text-center\">\n      <ProfileAvatar\n        src={profile.avatar}\n        name={profile.name}\n        className=\"width-200 height-200 img-fullsize font-huge\"\n      />\n\n      <div>\n        <label\n          htmlFor=\"avatar-upload\"\n          className=\"d-block cursor-pointer padded\"\n        >\n          Select new avatar\n          <input\n            id=\"avatar-upload\"\n            type=\"file\"\n            className=\"d-none\"\n            accept={fileInputTypes}\n            onChange={onFileInputChange}\n          />\n        </label>\n\n        <Modal show={isOpen} onHide={close}>\n          <Modal.Header>\n            <Modal.Title>Adjust and upload new avatar</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className=\"d-flex justify-content-center align-items-center h-100\">\n              {img && (\n                <AvatarEditor\n                  ref={avatarEditorRef}\n                  image={img}\n                  width={200}\n                  height={200}\n                  border={10}\n                  borderRadius={100}\n                  rotate={0}\n                />\n              )}\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              block\n              appearance=\"ghost\"\n              onClick={onUploadClick}\n              disabled={isLoading}\n            >\n              Upload new avatar\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    </div>\n  );\n};\n\nexport default AvatarUploadBtn;\n","import React from 'react';\nimport { Drawer, Button, Divider, Alert } from 'rsuite';\nimport { useProfile } from '../../context/profile.context';\nimport EditableInput from '../EditableInput';\nimport { database } from '../../misc/firebase';\nimport ProviderBlock from './ProviderBlock';\nimport AvatarUploadBtn from './AvatarUploadBtn';\nimport { getUserUpdates } from '../../misc/helpers';\n\nconst Dashboard = ({ onSignOut }) => {\n  const { profile } = useProfile();\n\n  const onSave = async newData => {\n    try {\n      const updates = await getUserUpdates(\n        profile.uid,\n        'name',\n        newData,\n        database\n      );\n\n      await database.ref().update(updates);\n\n      Alert.success('Nickname has been updated', 4000);\n    } catch (err) {\n      Alert.error(err.message, 4000);\n    }\n  };\n\n  return (\n    <>\n      <Drawer.Header>\n        <Drawer.Title>Dashboard</Drawer.Title>\n      </Drawer.Header>\n\n      <Drawer.Body>\n        <h3>Hey, {profile.name}</h3>\n        <ProviderBlock />\n        <Divider />\n        <EditableInput\n          name=\"nickname\"\n          initialValue={profile.name}\n          onSave={onSave}\n          label={<h6 className=\"mb-2\">Nickname</h6>}\n        />\n        <AvatarUploadBtn />\n      </Drawer.Body>\n\n      <Drawer.Footer>\n        <Button block color=\"red\" onClick={onSignOut}>\n          Sign out\n        </Button>\n      </Drawer.Footer>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import React, { useCallback } from 'react';\nimport { Button, Icon, Drawer, Alert } from 'rsuite';\nimport { useModalState, useMediaQuery } from '../../misc/custom-hooks';\nimport Dashboard from '.';\nimport { auth, database } from '../../misc/firebase';\nimport { isOfflineForDatabase } from '../../context/profile.context';\n\nconst DashboardToggle = () => {\n  const { isOpen, close, open } = useModalState();\n  const isMobile = useMediaQuery('(max-width: 992px)');\n\n  const onSignOut = useCallback(() => {\n    database\n      .ref(`/status/${auth.currentUser.uid}`)\n      .set(isOfflineForDatabase)\n      .then(() => {\n        auth.signOut();\n        Alert.info('Signed out', 4000);\n        close();\n      })\n      .catch(err => {\n        Alert.error(err.message, 4000);\n      });\n  }, [close]);\n\n  return (\n    <>\n      <Button block color=\"blue\" onClick={open}>\n        <Icon icon=\"dashboard\" /> Dashboard\n      </Button>\n      <Drawer full={isMobile} show={isOpen} onHide={close} placement=\"left\">\n        <Dashboard onSignOut={onSignOut} />\n      </Drawer>\n    </>\n  );\n};\n\nexport default DashboardToggle;\n","import React, { useState, useCallback, useRef } from 'react';\nimport {\n  Button,\n  Icon,\n  Modal,\n  Form,\n  ControlLabel,\n  FormControl,\n  FormGroup,\n  Schema,\n  Alert,\n} from 'rsuite';\nimport firebase from 'firebase/app';\nimport { useModalState } from '../misc/custom-hooks';\nimport { database, auth } from '../misc/firebase';\n\nconst { StringType } = Schema.Types;\n\nconst model = Schema.Model({\n  name: StringType().isRequired('Chat name is required'),\n  description: StringType().isRequired('Description is required'),\n});\n\nconst INITIAL_FORM = {\n  name: '',\n  description: '',\n};\n\nconst CreateRoomBtnModal = () => {\n  const { isOpen, open, close } = useModalState();\n\n  const [formValue, setFormValue] = useState(INITIAL_FORM);\n  const [isLoading, setIsLoading] = useState(false);\n  const formRef = useRef();\n\n  const onFormChange = useCallback(value => {\n    setFormValue(value);\n  }, []);\n\n  const onSubmit = async () => {\n    if (!formRef.current.check()) {\n      return;\n    }\n\n    setIsLoading(true);\n\n    const newRoomdata = {\n      ...formValue,\n      createdAt: firebase.database.ServerValue.TIMESTAMP,\n      admins: {\n        [auth.currentUser.uid]: true,\n      },\n      fcmUsers: {\n        [auth.currentUser.uid]: true,\n      },\n    };\n\n    try {\n      await database.ref('rooms').push(newRoomdata);\n\n      Alert.info(`${formValue.name} has been created`, 4000);\n\n      setIsLoading(false);\n      setFormValue(INITIAL_FORM);\n      close();\n    } catch (err) {\n      setIsLoading(false);\n      Alert.error(err.message, 4000);\n    }\n  };\n\n  return (\n    <div className=\"mt-1\">\n      <Button block color=\"green\" onClick={open}>\n        <Icon icon=\"creative\" /> Create new chat room\n      </Button>\n\n      <Modal show={isOpen} onHide={close}>\n        <Modal.Header>\n          <Modal.Title>New chat room</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form\n            fluid\n            onChange={onFormChange}\n            formValue={formValue}\n            model={model}\n            ref={formRef}\n          >\n            <FormGroup>\n              <ControlLabel>Room name</ControlLabel>\n              <FormControl name=\"name\" placeholder=\"Enter chat room name...\" />\n            </FormGroup>\n\n            <FormGroup>\n              <ControlLabel>Description</ControlLabel>\n              <FormControl\n                componentClass=\"textarea\"\n                rows={5}\n                name=\"description\"\n                placeholder=\"Enter room description...\"\n              />\n            </FormGroup>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            block\n            appearance=\"primary\"\n            onClick={onSubmit}\n            disabled={isLoading}\n          >\n            Create new chat room\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default CreateRoomBtnModal;\n","import React from 'react';\nimport TimeAgo from 'timeago-react';\nimport ProfileAvatar from '../ProfileAvatar';\n\nconst RoomItem = ({ room }) => {\n  const { createdAt, name, lastMessage } = room;\n\n  return (\n    <div>\n      <div className=\"d-flex justify-content-between align-items-center\">\n        <h3 className=\"text-disappear\">{name}</h3>\n        <TimeAgo\n          datetime={\n            lastMessage ? new Date(lastMessage.createdAt) : new Date(createdAt)\n          }\n          className=\"font-normal text-black-45\"\n        />\n      </div>\n\n      <div className=\"d-flex align-items-center text-black-70\">\n        {lastMessage ? (\n          <>\n            <div className=\"d-flex align-items-center\">\n              <ProfileAvatar\n                src={lastMessage.author.avatar}\n                name={lastMessage.author.name}\n                size=\"sm\"\n              />\n            </div>\n\n            <div className=\"text-disappear ml-2\">\n              <div className=\"italic\">{lastMessage.author.name}</div>\n              <span>{lastMessage.text || lastMessage.file.name}</span>\n            </div>\n          </>\n        ) : (\n          <span>No messages yet...</span>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default RoomItem;\n","import React, { createContext, useState, useEffect, useContext } from 'react';\nimport { database } from '../misc/firebase';\nimport { transformToArrWithId } from '../misc/helpers';\n\nconst RoomsContext = createContext();\n\nexport const RoomsProvider = ({ children }) => {\n  const [rooms, setRooms] = useState(null);\n\n  useEffect(() => {\n    const roomListRef = database.ref('rooms');\n\n    roomListRef.on('value', snap => {\n      const data = transformToArrWithId(snap.val());\n      setRooms(data);\n    });\n\n    return () => {\n      roomListRef.off();\n    };\n  }, []);\n\n  return (\n    <RoomsContext.Provider value={rooms}>{children}</RoomsContext.Provider>\n  );\n};\n\nexport const useRooms = () => useContext(RoomsContext);\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Nav, Loader } from 'rsuite';\nimport RoomItem from './RoomItem';\nimport { useRooms } from '../../context/rooms.context';\n\nconst ChatRoomList = ({ aboveElHeight }) => {\n  const rooms = useRooms();\n  const location = useLocation();\n\n  return (\n    <Nav\n      appearance=\"subtle\"\n      vertical\n      reversed\n      className=\"overflow-y-scroll custom-scroll\"\n      style={{\n        height: `calc(100% - ${aboveElHeight}px)`,\n      }}\n      activeKey={location.pathname}\n    >\n      {!rooms && (\n        <Loader center vertical content=\"Loading\" speed=\"slow\" size=\"md\" />\n      )}\n      {rooms &&\n        rooms.length > 0 &&\n        rooms.map(room => (\n          <Nav.Item\n            componentClass={Link}\n            to={`/chat/${room.id}`}\n            key={room.id}\n            eventKey={`/chat/${room.id}`}\n          >\n            <RoomItem room={room} />\n          </Nav.Item>\n        ))}\n    </Nav>\n  );\n};\n\nexport default ChatRoomList;\n","import React, { useRef, useState, useEffect } from 'react';\nimport { Divider } from 'rsuite';\nimport DashboardToggle from './dashboard/DashboardToggle';\nimport CreateRoomBtnModal from './CreateRoomBtnModal';\nimport ChatRoomList from './rooms/ChatRoomList';\n\nconst Sidebar = () => {\n  const topSidebarRef = useRef();\n  const [height, setHeight] = useState(0);\n\n  useEffect(() => {\n    if (topSidebarRef.current) {\n      setHeight(topSidebarRef.current.scrollHeight);\n    }\n  }, [topSidebarRef]);\n\n  return (\n    <div className=\"h-100 pt-2\">\n      <div ref={topSidebarRef}>\n        <DashboardToggle />\n        <CreateRoomBtnModal />\n        <Divider>Join conversation</Divider>\n      </div>\n      <ChatRoomList aboveElHeight={height} />\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React from 'react';\nimport { createContext, useContextSelector } from 'use-context-selector';\n\nconst CurrentRoomContext = createContext();\n\nexport const CurrentRoomProvider = ({ children, data }) => {\n  return (\n    <CurrentRoomContext.Provider value={data}>\n      {children}\n    </CurrentRoomContext.Provider>\n  );\n};\n\nexport const useCurrentRoom = selector =>\n  useContextSelector(CurrentRoomContext, selector);\n","import React, { memo } from 'react';\nimport { Button, Modal } from 'rsuite';\nimport { useCurrentRoom } from '../../../context/current-room.context';\nimport { useModalState } from '../../../misc/custom-hooks';\n\nconst RoomInfoBtnModal = () => {\n  const { isOpen, close, open } = useModalState();\n  const description = useCurrentRoom(v => v.description);\n  const name = useCurrentRoom(v => v.name);\n\n  return (\n    <>\n      <Button appearance=\"link\" className=\"px-0\" onClick={open}>\n        Room information\n      </Button>\n      <Modal show={isOpen} onHide={close}>\n        <Modal.Header>\n          <Modal.Title>About {name}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <h6 className=\"mb-1\">Description</h6>\n          <p>{description}</p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button block onClick={close}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default memo(RoomInfoBtnModal);\n","import React, { memo } from 'react';\nimport { Button, Drawer, Alert } from 'rsuite';\nimport { useParams } from 'react-router';\nimport { useModalState, useMediaQuery } from '../../../misc/custom-hooks';\nimport EditableInput from '../../EditableInput';\nimport { useCurrentRoom } from '../../../context/current-room.context';\nimport { database } from '../../../misc/firebase';\n\nconst EditRoomBtnDrawer = () => {\n  const { isOpen, open, close } = useModalState();\n  const { chatId } = useParams();\n  const isMobile = useMediaQuery('(max-width: 992px)');\n\n  const name = useCurrentRoom(v => v.name);\n  const description = useCurrentRoom(v => v.description);\n\n  const updateData = (key, value) => {\n    database\n      .ref(`rooms/${chatId}`)\n      .child(key)\n      .set(value)\n      .then(() => {\n        Alert.success('Successfully updated', 4000);\n      })\n      .catch(err => {\n        Alert.error(err.message, 4000);\n      });\n  };\n\n  const onNameSave = newName => {\n    updateData('name', newName);\n  };\n\n  const onDescriptionSave = newDesc => {\n    updateData('description', newDesc);\n  };\n\n  return (\n    <>\n      <Button className=\"br-circle\" size=\"sm\" color=\"red\" onClick={open}>\n        A\n      </Button>\n\n      <Drawer full={isMobile} show={isOpen} onHide={close} placement=\"right\">\n        <Drawer.Header>\n          <Drawer.Title>Edit Room</Drawer.Title>\n        </Drawer.Header>\n        <Drawer.Body>\n          <EditableInput\n            initialValue={name}\n            onSave={onNameSave}\n            label={<h6 className=\"mb-2\">Name</h6>}\n            emptyMsg=\"Name can not be empty\"\n          />\n          <EditableInput\n            componentClass=\"textarea\"\n            rows={5}\n            initialValue={description}\n            onSave={onDescriptionSave}\n            emptyMsg=\"Description can not be empty\"\n            wrapperClassName=\"mt-3\"\n          />\n        </Drawer.Body>\n        <Drawer.Footer>\n          <Button block onClick={close}>\n            Close\n          </Button>\n        </Drawer.Footer>\n      </Drawer>\n    </>\n  );\n};\n\nexport default memo(EditRoomBtnDrawer);\n","import React, { useState, useCallback, useRef } from 'react';\nimport { useParams } from 'react-router';\nimport {\n  Button,\n  Icon,\n  Modal,\n  Form,\n  ControlLabel,\n  FormControl,\n  FormGroup,\n  Schema,\n  Alert,\n} from 'rsuite';\nimport { useModalState } from '../../../misc/custom-hooks';\nimport { functions } from '../../../misc/firebase';\n\nconst { StringType } = Schema.Types;\n\nconst model = Schema.Model({\n  title: StringType().isRequired('Title is required'),\n  message: StringType().isRequired('Message body is required'),\n});\n\nconst INITIAL_FORM = {\n  title: '',\n  message: '',\n};\n\nconst SendFcmBtnModal = () => {\n  const { chatId } = useParams();\n  const { isOpen, open, close } = useModalState();\n\n  const [formValue, setFormValue] = useState(INITIAL_FORM);\n  const [isLoading, setIsLoading] = useState(false);\n  const formRef = useRef();\n\n  const onFormChange = useCallback(value => {\n    setFormValue(value);\n  }, []);\n\n  const onSubmit = async () => {\n    if (!formRef.current.check()) {\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      const sendFcm = functions.httpsCallable('sendFcm');\n      await sendFcm({ chatId, ...formValue });\n\n      setIsLoading(false);\n      setFormValue(INITIAL_FORM);\n      close();\n\n      Alert.info('Notification has been sent', 7000);\n    } catch (error) {\n      Alert.error(error.message, 7000);\n    }\n  };\n\n  return (\n    <>\n      <Button appearance=\"primary\" size=\"xs\" onClick={open}>\n        <Icon icon=\"podcast\" /> Broadcast message\n      </Button>\n\n      <Modal show={isOpen} onHide={close}>\n        <Modal.Header>\n          <Modal.Title>Send notification to room users</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form\n            fluid\n            onChange={onFormChange}\n            formValue={formValue}\n            model={model}\n            ref={formRef}\n          >\n            <FormGroup>\n              <ControlLabel>Title</ControlLabel>\n              <FormControl name=\"title\" placeholder=\"Enter message title...\" />\n            </FormGroup>\n\n            <FormGroup>\n              <ControlLabel>Message</ControlLabel>\n              <FormControl\n                componentClass=\"textarea\"\n                rows={5}\n                name=\"message\"\n                placeholder=\"Enter notification message...\"\n              />\n            </FormGroup>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            block\n            appearance=\"primary\"\n            onClick={onSubmit}\n            disabled={isLoading}\n          >\n            Publish message\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default SendFcmBtnModal;\n","import React from 'react';\nimport { IconButton, Icon, Modal, Button } from 'rsuite';\nimport { useParams } from 'react-router';\nimport { useCurrentRoom } from '../../../context/current-room.context';\nimport { useModalState } from '../../../misc/custom-hooks';\nimport { database, auth } from '../../../misc/firebase';\n\nconst AskFcmBtnModal = () => {\n  const { chatId } = useParams();\n  const isReceivingFcm = useCurrentRoom(v => v.isReceivingFcm);\n  const { isOpen, close, open } = useModalState();\n\n  const onAccept = () => {\n    database\n      .ref(`/rooms/${chatId}/fcmUsers`)\n      .child(auth.currentUser.uid)\n      .set(true);\n  };\n\n  const onCancel = () => {\n    database\n      .ref(`/rooms/${chatId}/fcmUsers`)\n      .child(auth.currentUser.uid)\n      .remove();\n  };\n\n  return (\n    <>\n      <IconButton\n        icon={<Icon icon=\"podcast\" />}\n        color=\"blue\"\n        size=\"sm\"\n        circle\n        appearance={isReceivingFcm ? 'default' : 'ghost'}\n        onClick={open}\n      />\n\n      <Modal show={isOpen} onHide={close} size=\"xs\" backdrop=\"static\">\n        <Modal.Header>\n          <Modal.Title>Notifications permission</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {isReceivingFcm ? (\n            <div className=\"text-center\">\n              <Icon className=\"text-green mb-3\" icon=\"check-circle\" size=\"5x\" />\n              <h6>\n                You are subscribed to broadcast messages sent by admins of this\n                room.\n              </h6>\n            </div>\n          ) : (\n            <div className=\"text-center\">\n              <Icon\n                className=\"text-blue mb-3\"\n                icon=\"question-circle\"\n                size=\"5x\"\n              />\n              <h6>\n                Do you want to subscribe to messages sent by admins of this\n                room?\n              </h6>\n            </div>\n          )}\n          <p className=\"mt-2\">\n            To receive notifications make sure you allow Notifactions in your\n            browser\n          </p>\n          <p>\n            Permission:{' '}\n            {Notification.permission === 'granted' ? (\n              <span className=\"text-green\">Granted</span>\n            ) : (\n              <span className=\"text-red\">Denied</span>\n            )}\n          </p>\n        </Modal.Body>\n        <Modal.Footer>\n          {isReceivingFcm ? (\n            <Button color=\"green\" onClick={onCancel}>\n              I changed my mind\n            </Button>\n          ) : (\n            <Button color=\"green\" onClick={onAccept}>\n              Yes, I do\n            </Button>\n          )}\n          <Button onClick={close}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default AskFcmBtnModal;\n","import React, { memo } from 'react';\nimport { Icon, ButtonToolbar } from 'rsuite';\nimport { Link } from 'react-router-dom';\nimport { useCurrentRoom } from '../../../context/current-room.context';\nimport { useMediaQuery } from '../../../misc/custom-hooks';\nimport RoomInfoBtnModal from './RoomInfoBtnModal';\nimport EditRoomBtnDrawer from './EditRoomBtnDrawer';\nimport SendFcmBtnModal from './SendFcmBtnModal';\nimport AskFcmBtnModal from './AskFcmBtnModal';\n\nconst Top = () => {\n  const name = useCurrentRoom(v => v.name);\n  const isAdmin = useCurrentRoom(v => v.isAdmin);\n  const isMobile = useMediaQuery('(max-width: 992px)');\n\n  return (\n    <div>\n      <div className=\"d-flex justify-content-between align-items-center\">\n        <h4 className=\"text-disappear d-flex align-items-center\">\n          <Icon\n            componentClass={Link}\n            to=\"/\"\n            icon=\"arrow-circle-left\"\n            size=\"2x\"\n            className={\n              isMobile\n                ? 'd-inline-block p-0 mr-2 text-blue link-unstyled'\n                : 'd-none'\n            }\n          />\n          <span className=\"text-disappear\">{name}</span>\n        </h4>\n\n        <ButtonToolbar className=\"ws-nowrap\">\n          <AskFcmBtnModal />\n          {isAdmin && <EditRoomBtnDrawer />}\n        </ButtonToolbar>\n      </div>\n\n      <div className=\"d-flex justify-content-between align-items-center\">\n        {isAdmin && <SendFcmBtnModal />}\n        <RoomInfoBtnModal />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Top);\n","import React, { useState } from 'react';\nimport { useParams } from 'react-router';\nimport { InputGroup, Icon, Modal, Button, Uploader, Alert } from 'rsuite';\nimport { useModalState } from '../../../misc/custom-hooks';\nimport { storage } from '../../../misc/firebase';\n\nconst MAX_FILE_SIZE = 1000 * 1024 * 5;\n\nconst AttachmentBtnModal = ({ afterUpload }) => {\n  const { chatId } = useParams();\n  const { isOpen, close, open } = useModalState();\n\n  const [fileList, setFileList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const onChange = fileArr => {\n    const filtered = fileArr\n      .filter(el => el.blobFile.size <= MAX_FILE_SIZE)\n      .slice(0, 5);\n\n    setFileList(filtered);\n  };\n\n  const onUpload = async () => {\n    try {\n      const uploadPromises = fileList.map(f => {\n        return storage\n          .ref(`/chat/${chatId}`)\n          .child(Date.now() + f.name)\n          .put(f.blobFile, {\n            cacheControl: `public, max-age=${3600 * 24 * 3}`,\n          });\n      });\n\n      const uploadSnapshots = await Promise.all(uploadPromises);\n\n      const shapePromises = uploadSnapshots.map(async snap => {\n        return {\n          contentType: snap.metadata.contentType,\n          name: snap.metadata.name,\n          url: await snap.ref.getDownloadURL(),\n        };\n      });\n\n      const files = await Promise.all(shapePromises);\n\n      await afterUpload(files);\n\n      setIsLoading(false);\n      close();\n    } catch (err) {\n      setIsLoading(false);\n      Alert.error(err.message);\n    }\n  };\n\n  return (\n    <>\n      <InputGroup.Button onClick={open}>\n        <Icon icon=\"attachment\" />\n      </InputGroup.Button>\n      <Modal show={isOpen} onHide={close}>\n        <Modal.Header>\n          <Modal.Title>Upload files</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Uploader\n            autoUpload={false}\n            action=\"\"\n            fileList={fileList}\n            onChange={onChange}\n            multiple\n            listType=\"picture-text\"\n            className=\"w-100\"\n            disabled={isLoading}\n          />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button block disabled={isLoading} onClick={onUpload}>\n            Send to chat\n          </Button>\n          <div className=\"text-right mt-2\">\n            <small>* only files less than 5 mb are allowed</small>\n          </div>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default AttachmentBtnModal;\n","import React, { useState, useCallback } from 'react';\nimport { InputGroup, Icon, Alert } from 'rsuite';\nimport { ReactMic } from 'react-mic';\nimport { useParams } from 'react-router';\nimport { storage } from '../../../misc/firebase';\n\nconst AudioMsgBtn = ({ afterUpload }) => {\n  const { chatId } = useParams();\n\n  const [isRecording, setIsRecording] = useState(false);\n  const [isUploading, setIsUploading] = useState(false);\n\n  const onClick = useCallback(() => {\n    setIsRecording(p => !p);\n  }, []);\n\n  const onUpload = useCallback(\n    async data => {\n      setIsUploading(true);\n      try {\n        const snap = await storage\n          .ref(`/chat/${chatId}`)\n          .child(`audio_${Date.now()}.mp3`)\n          .put(data.blob, {\n            cacheControl: `public, max-age=${3600 * 24 * 3}`,\n          });\n\n        const file = {\n          contentType: snap.metadata.contentType,\n          name: snap.metadata.name,\n          url: await snap.ref.getDownloadURL(),\n        };\n\n        setIsUploading(false);\n        afterUpload([file]);\n      } catch (error) {\n        setIsUploading(false);\n        Alert.error(error.message);\n      }\n    },\n    [afterUpload, chatId]\n  );\n\n  return (\n    <InputGroup.Button\n      onClick={onClick}\n      disabled={isUploading}\n      className={isRecording ? 'animate-blink' : ''}\n    >\n      <Icon icon=\"microphone\" />\n      <ReactMic\n        record={isRecording}\n        className=\"d-none\"\n        onStop={onUpload}\n        mimeType=\"audio/mp3\"\n      />\n    </InputGroup.Button>\n  );\n};\n\nexport default AudioMsgBtn;\n","import React, { useState, useCallback } from 'react';\nimport { InputGroup, Input, Icon, Alert } from 'rsuite';\nimport firebase from 'firebase/app';\nimport { useParams } from 'react-router';\nimport { useProfile } from '../../../context/profile.context';\nimport { database } from '../../../misc/firebase';\nimport AttachmentBtnModal from './AttachmentBtnModal';\nimport AudioMsgBtn from './AudioMsgBtn';\n\nfunction assembleMessage(profile, chatId) {\n  return {\n    roomId: chatId,\n    author: {\n      name: profile.name,\n      uid: profile.uid,\n      createdAt: profile.createdAt,\n      ...(profile.avatar ? { avatar: profile.avatar } : {}),\n    },\n    createdAt: firebase.database.ServerValue.TIMESTAMP,\n    likeCount: 0,\n  };\n}\n\nconst Bottom = () => {\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { chatId } = useParams();\n  const { profile } = useProfile();\n\n  const onInputChange = useCallback(value => {\n    setInput(value);\n  }, []);\n\n  const onSendClick = async () => {\n    if (input.trim() === '') {\n      return;\n    }\n\n    const msgData = assembleMessage(profile, chatId);\n    msgData.text = input;\n\n    const updates = {};\n\n    const messageId = database.ref('messages').push().key;\n\n    updates[`/messages/${messageId}`] = msgData;\n    updates[`/rooms/${chatId}/lastMessage`] = {\n      ...msgData,\n      msgId: messageId,\n    };\n\n    setIsLoading(true);\n    try {\n      await database.ref().update(updates);\n\n      setInput('');\n      setIsLoading(false);\n    } catch (err) {\n      setIsLoading(false);\n      Alert.error(err.message);\n    }\n  };\n\n  const onKeyDown = ev => {\n    if (ev.keyCode === 13) {\n      ev.preventDefault();\n      onSendClick();\n    }\n  };\n\n  const afterUpload = useCallback(\n    async files => {\n      setIsLoading(true);\n\n      const updates = {};\n\n      files.forEach(file => {\n        const msgData = assembleMessage(profile, chatId);\n        msgData.file = file;\n\n        const messageId = database.ref('messages').push().key;\n\n        updates[`/messages/${messageId}`] = msgData;\n      });\n\n      const lastMsgId = Object.keys(updates).pop();\n\n      updates[`/rooms/${chatId}/lastMessage`] = {\n        ...updates[lastMsgId],\n        msgId: lastMsgId,\n      };\n\n      try {\n        await database.ref().update(updates);\n        setIsLoading(false);\n      } catch (err) {\n        setIsLoading(false);\n        Alert.error(err.message);\n      }\n    },\n    [chatId, profile]\n  );\n\n  return (\n    <div>\n      <InputGroup>\n        <AttachmentBtnModal afterUpload={afterUpload} />\n        <AudioMsgBtn afterUpload={afterUpload} />\n        <Input\n          placeholder=\"Write a new message here...\"\n          value={input}\n          onChange={onInputChange}\n          onKeyDown={onKeyDown}\n        />\n\n        <InputGroup.Button\n          color=\"blue\"\n          appearance=\"primary\"\n          onClick={onSendClick}\n          disabled={isLoading}\n        >\n          <Icon icon=\"send\" />\n        </InputGroup.Button>\n      </InputGroup>\n    </div>\n  );\n};\n\nexport default Bottom;\n","import React from 'react';\nimport { Button, Modal } from 'rsuite';\nimport { useModalState } from '../../../misc/custom-hooks';\nimport ProfileAvatar from '../../ProfileAvatar';\n\nconst ProfileInfoBtnModal = ({ profile, children, ...btnProps }) => {\n  const { isOpen, close, open } = useModalState();\n\n  const { name, avatar, createdAt } = profile;\n\n  const shortName = profile.name.split(' ')[0];\n\n  const memberSince = new Date(createdAt).toLocaleDateString();\n\n  return (\n    <>\n      <Button {...btnProps} onClick={open}>\n        {shortName}\n      </Button>\n      <Modal show={isOpen} onHide={close}>\n        <Modal.Header>\n          <Modal.Title>{shortName} profile</Modal.Title>\n        </Modal.Header>\n        <Modal.Body className=\"text-center\">\n          <ProfileAvatar\n            src={avatar}\n            name={name}\n            className=\"width-200 height-200 img-fullsize font-huge\"\n          />\n\n          <h4 className=\"mt-2\">{name}</h4>\n\n          <p>Member since {memberSince}</p>\n        </Modal.Body>\n        <Modal.Footer>\n          {children}\n          <Button block onClick={close}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default ProfileInfoBtnModal;\n","import React from 'react';\nimport { Whisper, Tooltip, Badge } from 'rsuite';\nimport { usePresence } from '../misc/custom-hooks';\n\nconst getColor = presence => {\n  if (!presence) {\n    return 'gray';\n  }\n\n  switch (presence.state) {\n    case 'online':\n      return 'green';\n    case 'offline':\n      return 'red';\n    default:\n      return 'gray';\n  }\n};\n\nconst getText = presence => {\n  if (!presence) {\n    return 'Unknown state';\n  }\n\n  return presence.state === 'online'\n    ? 'Online'\n    : `Last online ${new Date(presence.last_changed).toLocaleDateString()}`;\n};\n\nconst PresenceDot = ({ uid }) => {\n  const presence = usePresence(uid);\n\n  return (\n    <Whisper\n      placement=\"top\"\n      trigger=\"hover\"\n      speaker={<Tooltip>{getText(presence)}</Tooltip>}\n    >\n      <Badge\n        className=\"cursor-pointer\"\n        style={{ backgroundColor: getColor(presence) }}\n      />\n    </Whisper>\n  );\n};\n\nexport default PresenceDot;\n","import React from 'react';\nimport { Badge, Whisper, Tooltip, IconButton, Icon } from 'rsuite';\n\nconst ConditionalBadge = ({ condition, children }) => {\n  return condition ? <Badge content={condition}>{children}</Badge> : children;\n};\n\nconst IconBtnControl = ({\n  isVisible,\n  iconName,\n  tooltip,\n  onClick,\n  badgeContent,\n  ...props\n}) => {\n  return (\n    <div\n      className=\"ml-2\"\n      style={{ visibility: isVisible ? 'visible' : 'hidden' }}\n    >\n      <ConditionalBadge condition={badgeContent}>\n        <Whisper\n          placement=\"top\"\n          delay={0}\n          delayHide={0}\n          delayShow={0}\n          trigger=\"hover\"\n          speaker={<Tooltip>{tooltip}</Tooltip>}\n        >\n          <IconButton\n            {...props}\n            onClick={onClick}\n            circle\n            size=\"xs\"\n            icon={<Icon icon={iconName} />}\n          />\n        </Whisper>\n      </ConditionalBadge>\n    </div>\n  );\n};\n\nexport default IconBtnControl;\n","import React from 'react';\nimport { Modal } from 'rsuite';\nimport { useModalState } from '../../../misc/custom-hooks';\n\nconst ImgBtnModal = ({ src, fileName }) => {\n  const { isOpen, open, close } = useModalState();\n\n  return (\n    <>\n      <input\n        type=\"image\"\n        src={src}\n        alt=\"file\"\n        onClick={open}\n        className=\"mw-100 mh-100 w-auto\"\n      />\n      <Modal show={isOpen} onHide={close}>\n        <Modal.Header>\n          <Modal.Title>{fileName}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div>\n            <img src={src} height=\"100%\" width=\"100%\" alt=\"file\" />\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <a href={src} target=\"_blank\" rel=\"noopener noreferrer\">\n            View original\n          </a>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default ImgBtnModal;\n","import React, { memo } from 'react';\nimport TimeAgo from 'timeago-react';\nimport { Button } from 'rsuite';\nimport ProfileAvatar from '../../ProfileAvatar';\nimport ProfileInfoBtnModal from './ProfileInfoBtnModal';\nimport PresenceDot from '../../PresenceDot';\nimport { useCurrentRoom } from '../../../context/current-room.context';\nimport { auth } from '../../../misc/firebase';\nimport { useHover, useMediaQuery } from '../../../misc/custom-hooks';\nimport IconBtnControl from './IconBtnControl';\nimport ImgBtnModal from './ImgBtnModal';\n\nconst renderFileMessage = file => {\n  if (file.contentType.includes('image')) {\n    return (\n      <div className=\"height-220\">\n        <ImgBtnModal src={file.url} fileName={file.name} />\n      </div>\n    );\n  }\n\n  if (file.contentType.includes('audio')) {\n    return (\n      // eslint-disable-next-line jsx-a11y/media-has-caption\n      <audio controls>\n        <source src={file.url} type=\"audio/mp3\" />\n        Your browser does not support the audio element.\n      </audio>\n    );\n  }\n\n  return <a href={file.url}>Download {file.name}</a>;\n};\n\nconst MessageItem = ({ message, handleAdmin, handleLike, handleDelete }) => {\n  const { author, createdAt, text, file, likes, likeCount } = message;\n\n  const [selfRef, isHovered] = useHover();\n  const isMobile = useMediaQuery('(max-width: 992px)');\n\n  const isAdmin = useCurrentRoom(v => v.isAdmin);\n  const admins = useCurrentRoom(v => v.admins);\n\n  const isMsgAuthorAdmin = admins.includes(author.uid);\n  const isAuthor = auth.currentUser.uid === author.uid;\n  const canGrantAdmin = isAdmin && !isAuthor;\n\n  const canShowIcons = isMobile || isHovered;\n  const isLiked = likes && Object.keys(likes).includes(auth.currentUser.uid);\n\n  return (\n    <li\n      className={`padded mb-1 cursor-pointer ${isHovered ? 'bg-black-02' : ''}`}\n      ref={selfRef}\n    >\n      <div className=\"d-flex align-items-center font-bolder mb-1\">\n        <PresenceDot uid={author.uid} />\n\n        <ProfileAvatar\n          src={author.avatar}\n          name={author.name}\n          className=\"ml-1\"\n          size=\"xs\"\n        />\n\n        <ProfileInfoBtnModal\n          profile={author}\n          appearance=\"link\"\n          className=\"p-0 ml-1 text-black\"\n        >\n          {canGrantAdmin && (\n            <Button block onClick={() => handleAdmin(author.uid)} color=\"blue\">\n              {isMsgAuthorAdmin\n                ? 'Remove admin permission'\n                : 'Give admin in this room'}\n            </Button>\n          )}\n        </ProfileInfoBtnModal>\n        <TimeAgo\n          datetime={createdAt}\n          className=\"font-normal text-black-45 ml-2\"\n        />\n\n        <IconBtnControl\n          {...(isLiked ? { color: 'red' } : {})}\n          isVisible={canShowIcons}\n          iconName=\"heart\"\n          tooltip=\"Like this message\"\n          onClick={() => handleLike(message.id)}\n          badgeContent={likeCount}\n        />\n        {isAuthor && (\n          <IconBtnControl\n            isVisible={canShowIcons}\n            iconName=\"close\"\n            tooltip=\"Delete this message\"\n            onClick={() => handleDelete(message.id, file)}\n          />\n        )}\n      </div>\n\n      <div>\n        {text && <span className=\"word-breal-all\">{text}</span>}\n        {file && renderFileMessage(file)}\n      </div>\n    </li>\n  );\n};\n\nexport default memo(MessageItem);\n","/* eslint-disable consistent-return */\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { useParams } from 'react-router';\nimport { Alert, Button } from 'rsuite';\nimport { database, auth, storage } from '../../../misc/firebase';\nimport { transformToArrWithId, groupBy } from '../../../misc/helpers';\nimport MessageItem from './MessageItem';\n\nconst PAGE_SIZE = 15;\nconst messagesRef = database.ref('/messages');\n\nfunction shouldScrollToBottom(node, threshold = 30) {\n  const percentage =\n    (100 * node.scrollTop) / (node.scrollHeight - node.clientHeight) || 0;\n\n  return percentage > threshold;\n}\n\nconst Messages = () => {\n  const { chatId } = useParams();\n  const [messages, setMessages] = useState(null);\n  const [limit, setLimit] = useState(PAGE_SIZE);\n  const selfRef = useRef();\n\n  const isChatEmpty = messages && messages.length === 0;\n  const canShowMessages = messages && messages.length > 0;\n\n  const loadMessages = useCallback(\n    limitToLast => {\n      const node = selfRef.current;\n\n      messagesRef.off();\n\n      messagesRef\n        .orderByChild('roomId')\n        .equalTo(chatId)\n        .limitToLast(limitToLast || PAGE_SIZE)\n        .on('value', snap => {\n          const data = transformToArrWithId(snap.val());\n          setMessages(data);\n\n          if (shouldScrollToBottom(node)) {\n            node.scrollTop = node.scrollHeight;\n          }\n        });\n\n      setLimit(p => p + PAGE_SIZE);\n    },\n    [chatId]\n  );\n\n  const onLoadMore = useCallback(() => {\n    const node = selfRef.current;\n    const oldHeight = node.scrollHeight;\n\n    loadMessages(limit);\n\n    setTimeout(() => {\n      const newHeight = node.scrollHeight;\n      node.scrollTop = newHeight - oldHeight;\n    }, 200);\n  }, [loadMessages, limit]);\n\n  useEffect(() => {\n    const node = selfRef.current;\n\n    loadMessages();\n\n    setTimeout(() => {\n      node.scrollTop = node.scrollHeight;\n    }, 200);\n\n    return () => {\n      messagesRef.off('value');\n    };\n  }, [loadMessages]);\n\n  const handleAdmin = useCallback(\n    async uid => {\n      const adminsRef = database.ref(`/rooms/${chatId}/admins`);\n\n      let alertMsg;\n\n      await adminsRef.transaction(admins => {\n        if (admins) {\n          if (admins[uid]) {\n            admins[uid] = null;\n            alertMsg = 'Admin permission removed';\n          } else {\n            admins[uid] = true;\n            alertMsg = 'Admin permission granted';\n          }\n        }\n\n        return admins;\n      });\n\n      Alert.info(alertMsg, 4000);\n    },\n    [chatId]\n  );\n\n  const handleLike = useCallback(async msgId => {\n    const { uid } = auth.currentUser;\n    const messageRef = database.ref(`/messages/${msgId}`);\n\n    let alertMsg;\n\n    await messageRef.transaction(msg => {\n      if (msg) {\n        if (msg.likes && msg.likes[uid]) {\n          msg.likeCount -= 1;\n          msg.likes[uid] = null;\n          alertMsg = 'Like removed';\n        } else {\n          msg.likeCount += 1;\n\n          if (!msg.likes) {\n            msg.likes = {};\n          }\n\n          msg.likes[uid] = true;\n          alertMsg = 'Like added';\n        }\n      }\n\n      return msg;\n    });\n\n    Alert.info(alertMsg, 4000);\n  }, []);\n\n  const handleDelete = useCallback(\n    async (msgId, file) => {\n      // eslint-disable-next-line no-alert\n      if (!window.confirm('Delete this message?')) {\n        return;\n      }\n\n      const isLast = messages[messages.length - 1].id === msgId;\n\n      const updates = {};\n\n      updates[`/messages/${msgId}`] = null;\n\n      if (isLast && messages.length > 1) {\n        updates[`/rooms/${chatId}/lastMessage`] = {\n          ...messages[messages.length - 2],\n          msgId: messages[messages.length - 2].id,\n        };\n      }\n\n      if (isLast && messages.length === 1) {\n        updates[`/rooms/${chatId}/lastMessage`] = null;\n      }\n\n      try {\n        await database.ref().update(updates);\n\n        Alert.info('Message has been deleted');\n      } catch (err) {\n        return Alert.error(err.message);\n      }\n\n      if (file) {\n        try {\n          const fileRef = storage.refFromURL(file.url);\n          await fileRef.delete();\n        } catch (err) {\n          Alert.error(err.message);\n        }\n      }\n    },\n    [chatId, messages]\n  );\n\n  const renderMessages = () => {\n    const groups = groupBy(messages, item =>\n      new Date(item.createdAt).toDateString()\n    );\n\n    const items = [];\n\n    Object.keys(groups).forEach(date => {\n      items.push(\n        <li key={date} className=\"text-center mb-1 padded\">\n          {date}\n        </li>\n      );\n\n      const msgs = groups[date].map(msg => (\n        <MessageItem\n          key={msg.id}\n          message={msg}\n          handleAdmin={handleAdmin}\n          handleLike={handleLike}\n          handleDelete={handleDelete}\n        />\n      ));\n\n      items.push(...msgs);\n    });\n\n    return items;\n  };\n\n  return (\n    <ul ref={selfRef} className=\"msg-list custom-scroll\">\n      {messages && messages.length >= PAGE_SIZE && (\n        <li className=\"text-center mt-2 mb-2\">\n          <Button onClick={onLoadMore} color=\"green\">\n            Load more\n          </Button>\n        </li>\n      )}\n      {isChatEmpty && <li>No messages yet</li>}\n      {canShowMessages && renderMessages()}\n    </ul>\n  );\n};\n\nexport default Messages;\n","import React from 'react';\nimport { useParams } from 'react-router';\nimport { Loader } from 'rsuite';\n\nimport ChatTop from '../../components/chat-window/top';\nimport ChatBottom from '../../components/chat-window/bottom';\nimport Messages from '../../components/chat-window/messages';\nimport { useRooms } from '../../context/rooms.context';\nimport { CurrentRoomProvider } from '../../context/current-room.context';\nimport { transformToArr } from '../../misc/helpers';\nimport { auth } from '../../misc/firebase';\n\nconst Chat = () => {\n  const { chatId } = useParams();\n\n  const rooms = useRooms();\n\n  if (!rooms) {\n    return <Loader center vertical size=\"md\" content=\"Loading\" speed=\"slow\" />;\n  }\n\n  const currentRoom = rooms.find(room => room.id === chatId);\n\n  if (!currentRoom) {\n    return <h6 className=\"text-center mt-page\">Chat {chatId} not found</h6>;\n  }\n\n  const { name, description } = currentRoom;\n\n  const admins = transformToArr(currentRoom.admins);\n  const fcmUsers = transformToArr(currentRoom.fcmUsers);\n  const isAdmin = admins.includes(auth.currentUser.uid);\n  const isReceivingFcm = fcmUsers.includes(auth.currentUser.uid);\n\n  const currentRoomData = {\n    name,\n    description,\n    admins,\n    isAdmin,\n    isReceivingFcm,\n  };\n\n  return (\n    <CurrentRoomProvider data={currentRoomData}>\n      <div className=\"chat-top\">\n        <ChatTop />\n      </div>\n      <div className=\"chat-middle\">\n        <Messages />\n      </div>\n      <div className=\"chat-bottom\">\n        <ChatBottom />\n      </div>\n    </CurrentRoomProvider>\n  );\n};\n\nexport default Chat;\n","import React from 'react';\nimport { Grid, Row, Col } from 'rsuite';\nimport { Switch, Route, useRouteMatch } from 'react-router';\nimport Sidebar from '../../components/Sidebar';\nimport { RoomsProvider } from '../../context/rooms.context';\nimport Chat from './Chat';\nimport { useMediaQuery } from '../../misc/custom-hooks';\n\nconst Home = () => {\n  const isDesktop = useMediaQuery('(min-width: 992px)');\n  const { isExact } = useRouteMatch();\n\n  const canRenderSidebar = isDesktop || isExact;\n\n  return (\n    <RoomsProvider>\n      <Grid fluid className=\"h-100\">\n        <Row className=\"h-100\">\n          {canRenderSidebar && (\n            <Col xs={24} md={8} className=\"h-100\">\n              <Sidebar />\n            </Col>\n          )}\n\n          <Switch>\n            <Route exact path=\"/chat/:chatId\">\n              <Col xs={24} md={16} className=\"h-100\">\n                <Chat />\n              </Col>\n            </Route>\n            <Route>\n              {isDesktop && (\n                <Col xs={24} md={16} className=\"h-100\">\n                  <h6 className=\"text-center mt-page\">Please select chat</h6>\n                </Col>\n              )}\n            </Route>\n          </Switch>\n        </Row>\n      </Grid>\n    </RoomsProvider>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { Redirect, Route } from 'react-router';\nimport { Container, Loader } from 'rsuite';\nimport { useProfile } from '../context/profile.context';\n\nconst PublicRoute = ({ children, ...routeProps }) => {\n  const { profile, isLoading } = useProfile();\n\n  if (isLoading && !profile) {\n    return (\n      <Container>\n        <Loader center vertical size=\"md\" content=\"Loading\" speed=\"slow\" />\n      </Container>\n    );\n  }\n\n  if (profile && !isLoading) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return <Route {...routeProps}>{children}</Route>;\n};\n\nexport default PublicRoute;\n","import React from 'react';\n\nimport 'rsuite/dist/styles/rsuite-default.css';\nimport './styles/main.scss';\nimport { Switch } from 'react-router';\nimport SignIn from './pages/SignIn';\nimport PrivateRoute from './components/PrivateRoute';\nimport Home from './pages/Home';\nimport PublicRoute from './components/PublicRoute';\nimport { ProfileProvider } from './context/profile.context';\n\nfunction App() {\n  return (\n    <ProfileProvider>\n      <Switch>\n        <PublicRoute path=\"/signin\">\n          <SignIn />\n        </PublicRoute>\n        <PrivateRoute path=\"/\">\n          <Home />\n        </PrivateRoute>\n      </Switch>\n    </ProfileProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}